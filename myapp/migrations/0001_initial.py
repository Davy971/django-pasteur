# Generated by Django 2.1.7 on 2019-06-24 11:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Analyse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nEchantillon', models.CharField(max_length=60, verbose_name="N° d'échantillon")),
                ('var1_kmno4', models.CharField(max_length=60, verbose_name='V0 (mL)')),
                ('var2_kmno4', models.CharField(max_length=60, verbose_name='V1 (mL)')),
                ('var3_kmno4', models.CharField(max_length=60, verbose_name='V2 (mL)')),
                ('var4_kmno4', models.CharField(max_length=60, verbose_name='Facteur dilution')),
                ('var5_kmno4', models.CharField(max_length=60, verbose_name='Resultat en mg/L')),
                ('var1_siccite', models.CharField(max_length=60, verbose_name='m1(g):masse de la coupelle pleine avant séchage à 105°C')),
                ('var2_siccite', models.CharField(max_length=60, verbose_name='m2(g):masse de la coupelle après séchage à 105°C')),
                ('var3_siccite', models.CharField(max_length=60, verbose_name='masse de matière sèche en g')),
                ('var4_siccite', models.CharField(max_length=60, verbose_name='masse de la coupelle vide')),
                ('var5_siccite', models.CharField(max_length=60, verbose_name='V en L')),
                ('var6_siccite', models.CharField(max_length=60, verbose_name='[MS] en g/L')),
                ('var7_siccite', models.CharField(max_length=60, verbose_name='MS en %')),
                ('var8_siccite', models.CharField(max_length=60, verbose_name="taux d'eau %")),
                ('var1_mvs', models.CharField(max_length=200, verbose_name='ma(g):masse du creuset vide')),
                ('var2_mvs', models.CharField(max_length=200, verbose_name='mb(g):masse du creuset contenant échantillon de boue avant séchage à 105°C')),
                ('var3_mvs', models.CharField(max_length=60, verbose_name='mc(g):masse du creuset contenant la matière sèche après séchage à 105°C')),
                ('var4_mvs', models.CharField(max_length=60, verbose_name='m2(g):masse du creuset contenant la matière calcinée à 550°C')),
                ('var5_mvs', models.CharField(max_length=60, verbose_name='V en L')),
                ('var6_mvs', models.CharField(max_length=60, verbose_name='MS en % à 105°C')),
                ('var7_mvs', models.CharField(max_length=60, verbose_name='[MS] en g/L à 105°C')),
                ('var8_mvs', models.CharField(max_length=60, verbose_name='MVS en % à 550 °C')),
                ('var9_mvs', models.CharField(max_length=60, verbose_name='[MVS] en g/L à 550°C')),
                ('var1_mest', models.CharField(max_length=60, verbose_name='P1 (mg)')),
                ('var2_mest', models.CharField(max_length=60, verbose_name='V (ml)')),
                ('var3_mest', models.CharField(max_length=60, verbose_name='P2 (mg)')),
                ('var4_mest', models.CharField(max_length=60, verbose_name='teneur de MES en mg/L')),
                ('var1_dco', models.CharField(max_length=60, verbose_name='V2 (mL)')),
                ('var2_dco', models.CharField(max_length=60, verbose_name='Volume analysé')),
                ('var3_dco', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var4_dco', models.CharField(max_length=60, verbose_name='DCO en mg/L')),
                ('var5_dco', models.CharField(max_length=60, verbose_name='poste')),
                ('var1_ntk', models.CharField(max_length=60, verbose_name='C (mol/L) titre HCL')),
                ('var2_ntk', models.CharField(max_length=60, verbose_name='V0 (ml)')),
                ('var3_ntk', models.CharField(max_length=60, verbose_name='V1 (ml)')),
                ('var4_ntk', models.CharField(max_length=60, verbose_name='V2 (ml)')),
                ('var5_ntk', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var6_ntk', models.CharField(max_length=60, verbose_name='NTK mg/L')),
                ('var1_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C3')),
                ('var2_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C4')),
                ('var3_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C1')),
                ('var4_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C2')),
                ('var5_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C1/3')),
                ('var6_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C1-C2')),
                ('var7_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='2C1/3')),
                ('var8_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C3-C4')),
                ('var9_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='Vt')),
                ('var10_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='Ve')),
                ('var11_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='Vt-Ve')),
                ('var12_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='Vt/Ve')),
                ('var13_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='(Vt-Ve)Vt')),
                ('var14_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='DBO')),
                ('var15_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='C1/3 <(C1-C2)')),
                ('var16_dbo_avec_dilution', models.CharField(max_length=60, verbose_name='(C1-C2)<2*C1/3')),
                ('var17_dbo_avec_dilution', models.CharField(max_length=60, verbose_name="'")),
                ('var1_dbo_sans_dilution', models.CharField(max_length=60, verbose_name='mesure1 [O2]t0')),
                ('var2_dbo_sans_dilution', models.CharField(max_length=60, verbose_name='mesure1 [O2]t5')),
                ('var3_dbo_sans_dilution', models.CharField(max_length=60, verbose_name='valeur DBO1 mg/L')),
                ('var4_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='mesure2 [O2]t0')),
                ('var5_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='mesure2 [O2]t5')),
                ('var6_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='valeur DBO2 mg/L')),
                ('var7_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='r expérimentale')),
                ('var8_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='r théorique')),
                ('var9_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='limite de controle')),
                ('var10_dbo_sans_dilution', models.CharField(blank=True, max_length=60, verbose_name='controle')),
                ('var1_sil_650', models.CharField(max_length=60, verbose_name='absorbance')),
                ('var2_sil_650', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var3_sil_650', models.CharField(max_length=60, verbose_name='concentration en mg/L SIO2')),
                ('var1_oxygene_dissous', models.CharField(max_length=60, verbose_name='v1(mL) volume échantillon titré')),
                ('var2_oxygene_dissous', models.CharField(max_length=60, verbose_name='v2 (mL) volume thiosulfate versé')),
                ('var3_oxygene_dissous', models.CharField(max_length=60, verbose_name='v0 (mL) volume échantillon prélevé')),
                ('var4_oxygene_dissous', models.CharField(max_length=60, verbose_name='résultat en mg/L')),
                ('var1_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name="volume solvant initial utilisé pour l'extraction mL")),
                ('var2_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name="volume d'eau filtrée L")),
                ('var3_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='parcours optique en centimètre')),
                ('var4_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 750')),
                ('var5_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 663')),
                ('var6_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 645')),
                ('var7_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 630')),
                ('var8_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 430')),
                ('var9_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='A0 410')),
                ('var10_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='Ca en µg/L')),
                ('var11_chlorophylle_scor_unesco', models.CharField(max_length=60, verbose_name='Pa µg/L')),
                ('var1_sabm', models.CharField(max_length=60, verbose_name='Absorbance')),
                ('var2_sabm', models.CharField(max_length=60, verbose_name='épaisseur de la cuve(1 ou 5cm)')),
                ('var3_sabm', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var4_sabm', models.CharField(max_length=60, verbose_name='concentration en lauryl sulfate de sodium en mg/L')),
                ('var1_residu_sec', models.CharField(max_length=60, verbose_name='mo(mg):masse de la coupelle vide')),
                ('var2_residu_sec', models.CharField(max_length=60, verbose_name='m1(mg):masse de la coupelle pleine après séchage à 105°C')),
                ('var3_residu_sec', models.CharField(max_length=60, verbose_name='m2(mg) masse de la coupelle après séchage à 180°C')),
                ('var4_residu_sec', models.CharField(max_length=60, verbose_name="V volume de la prise d'essai en mL")),
                ('var5_residu_sec', models.CharField(max_length=60, verbose_name='RS en mg/L à 105°C')),
                ('var6_residu_sec', models.CharField(max_length=60, verbose_name='RS en mg/L à 180°C')),
                ('var1_sil_815', models.CharField(max_length=60, verbose_name='absorbance')),
                ('var2_sil_815', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var3_sil_815', models.CharField(max_length=60, verbose_name='concentration en SiO2 µg/L')),
                ('var1_sil_bc', models.CharField(max_length=60, verbose_name='absorbance')),
                ('var2_sil_bc', models.CharField(max_length=60, verbose_name='facteur de dilution')),
                ('var3_sil_bc', models.CharField(max_length=60, verbose_name='concentration en SiO2 µmol')),
                ('var1_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='volume prélevé (L)')),
                ('var2_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='blc 665')),
                ('var3_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='blc 750')),
                ('var4_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A0 na 665 ')),
                ('var5_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A0 na 750')),
                ('var6_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A0 a 665')),
                ('var7_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A0 a 750')),
                ('var8_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A na 665')),
                ('var9_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='A a 665')),
                ('var10_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='Ca en µg/L')),
                ('var11_chlorophylle_lorenzen', models.CharField(max_length=60, verbose_name='Pa µg/L')),
            ],
        ),
        migrations.CreateModel(
            name='Codification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('date_rev', models.DateField()),
                ('revision', models.CharField(max_length=100)),
                ('intitule', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Echantillon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Etalonnage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_lauryl', models.CharField(max_length=100, verbose_name='concentration mg/L de lauryl sulfate de sodium')),
                ('c_mg', models.CharField(max_length=100, verbose_name='concentration mg/L')),
                ('c_micromol_l', models.CharField(max_length=100, verbose_name='concentration µmol/L')),
                ('c_micro_gl', models.CharField(default='null', max_length=100, verbose_name='concentration en µg/L')),
                ('absorbance', models.CharField(max_length=100, verbose_name='absorbance')),
            ],
        ),
        migrations.CreateModel(
            name='Feuille_calcul',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_analyse', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1))),
                ('heure_mise_sous_essai', models.TimeField(default=datetime.time(0, 0))),
                ('date_etalonnage', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name="Date de l'étalonnage")),
                ('longueur_onde', models.CharField(max_length=100, verbose_name="longueur d'onde d'analyse")),
                ('visa', models.CharField(max_length=100, verbose_name='Visa')),
                ('etalonnage', models.CharField(default='null', max_length=100, verbose_name='Etalonnage')),
                ('var1_mest', models.CharField(max_length=100, verbose_name='numéro de lot des filtres')),
                ('var2_mest', models.CharField(max_length=100, verbose_name='MEST de la solution de cellulose microcristalline(mg/L)')),
                ('var3_mest', models.CharField(max_length=100, verbose_name='rendement(%)')),
                ('var4_mest', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name='date de préparation de la solution de cellulose microcristalline')),
                ('var1_ntk', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name='Date de préparation du mélange catalyseur')),
                ('var2_ntk', models.CharField(max_length=100, verbose_name='N° de lot H2SO4')),
                ('var3_ntk', models.CharField(max_length=100, verbose_name='N° de lot acide chlorhydrique')),
                ('var4_ntk', models.CharField(max_length=100, verbose_name='N° de lot de l’acide borique')),
                ('var1_dbo_avec_dilution', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name="date de préparation de l'eau de dilution")),
                ('var2_dbo_avec_dilution', models.CharField(max_length=100, verbose_name="N° échant utilisé pour l'eau de dilution ensemencée")),
                ('var3_dbo_avec_dilution', models.CharField(max_length=100, verbose_name='DCO de cette échantillon')),
                ('var1_dbo_sans_dilution', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name='Date de préparation de la solution de lavage')),
                ('var1_oxygene_dissous', models.CharField(max_length=100, verbose_name="Volume thiosulfate versé pour l'étalonnage mL")),
                ('var2_oxygene_dissous', models.CharField(max_length=100, verbose_name='Concentration du thiosulfate de sodium mmol/L')),
                ('var1_chlorophylle_scor_unesco', models.CharField(max_length=100, verbose_name="Lot d'acétone utilisé")),
                ('var1_chlorophylle_lorenzen', models.CharField(max_length=100, verbose_name="Lot d'acide chlorydrique utilisé")),
                ('var2_chlorophylle_lorenzen', models.CharField(max_length=100, verbose_name="Lot d'acétone utilisé")),
                ('var3_chlorophylle_lorenzen', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name="Date de préparation de l'HCI")),
                ('var1_dco', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name='date de minéralisation')),
                ('var2_dco', models.DateField(default=datetime.datetime(1980, 1, 1, 1, 1, 1), verbose_name='date de titration')),
                ('var3_dco', models.CharField(max_length=100, verbose_name='Lot de la solution ferroïne')),
                ('var4_dco', models.CharField(max_length=100, verbose_name='Lot du H2SO4 4 mol/l')),
                ('var5_dco', models.CharField(max_length=100, verbose_name='volume de sulfate versé pour la détermintation de sa concentration')),
                ('var6_dco', models.CharField(max_length=100, verbose_name='valeur de solution de référence C')),
                ('var7_dco', models.CharField(max_length=100, verbose_name='essaie à blanc V1')),
                ('var8_dco', models.CharField(max_length=100, verbose_name='lot de sulfate de mercure')),
                ('var9_dco', models.CharField(max_length=100, verbose_name="lot de sulfate d'argent")),
                ('var10_dco', models.CharField(max_length=100, verbose_name='Blanc')),
            ],
        ),
        migrations.CreateModel(
            name='Parametre_etalonnage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('valeur', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Parametre_externe_analyse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('valeur', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Parametre_interne_analyse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=60)),
                ('valeur', models.CharField(max_length=100)),
                ('rang', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Type_analyse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('codification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Codification')),
                ('parametre_etalonnage', models.ManyToManyField(blank=True, to='myapp.Parametre_etalonnage')),
                ('parametre_externe', models.ManyToManyField(blank=True, to='myapp.Parametre_externe_analyse')),
                ('parametre_interne', models.ManyToManyField(blank=True, to='myapp.Parametre_interne_analyse')),
            ],
        ),
        migrations.AddField(
            model_name='feuille_calcul',
            name='profil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Profil'),
        ),
        migrations.AddField(
            model_name='feuille_calcul',
            name='type_analyse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Type_analyse'),
        ),
        migrations.AddField(
            model_name='etalonnage',
            name='profil',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Profil'),
        ),
        migrations.AddField(
            model_name='etalonnage',
            name='type_analyse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Type_analyse'),
        ),
        migrations.AddField(
            model_name='analyse',
            name='echantillon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Echantillon'),
        ),
        migrations.AddField(
            model_name='analyse',
            name='feuille_calcul',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Feuille_calcul'),
        ),
    ]
